apt install python3.7
apt install python3.7-dev libmysqlclient-dev default-libmysqlclient-dev
pip3 install --upgrade pip
pip3 install virtualenv
mkdir /opt/property_management
cd /opt/property_management/
virtualenv -p python3.7 env
source env/bin/activate
pip install gunicorn
pip install -r requirements.txt
django-admin startproject property_management .
vi property_management/settings.py
	import os
	ALLOWED_HOSTS = ['property.test']
	STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
python manage.py makemigrations
python manage.py migrate
python manage.py collectstatic
python manage.py runserver 0.0.0.0:8000
gunicorn --bind 0.0.0.0:8000 property_management.wsgi
deactivate
chown www-data /opt/property_management/
vi /etc/systemd/system/property-management.service
	[Unit]
	Description=property management gunicorn daemon
	After=network.target

	[Service]
	User=www-data
	Group=www-data
	WorkingDirectory=/opt/property_management
	ExecStart=/opt/property_management/env/bin/gunicorn --access-logfile - --workers 3 [--reload (just for development env)] --bind unix:/opt/property_management/property_management.sock property_management.wsgi:application

	[Install]
	WantedBy=multi-user.target

systemctl daemon-reload
systemctl start property-management
systemctl status property-management
systemctl enable property-management
vi /etc/nginx/sites-available/property.test
	server {
		listen 80;
		server_name property.test;

		location = /favicon.ico { access_log off; log_not_found off; }
		location /static/ {
			root /opt/property_management;
		}

		location / {
			include proxy_params;
			proxy_pass http://unix:/opt/property_management/property_management.sock;
		}
	}

sudo ln -s /etc/nginx/sites-available/property.test /etc/nginx/sites-enabled/
systemctl restart nginx

mysql -u root -p
	 create user 'property_management'@'localhost' identified by 'h59MQp@@Z$lxpWn4';
	 grant all privileges on property_management.* to 'property_management'@'localhost';

python manage.py createsuperuser